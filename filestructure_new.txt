🔧 Mechanic Shop Management API - File Structure
==============================================
Created by Jacob Dyson
GitHub: https://github.com/Jacobd1615/Mechanic-management-system

📁 Project Root
├── 📄 flask_app.py              # Application entry point & database initialization
├── 📄 config.py                 # Environment configurations (Dev/Test/Production)
├── 📄 requirements.txt          # Python dependencies
├── 📄 README.md                 # Comprehensive project documentation
├── 📄 .env                      # Environment variables (not in repo)
├── 📄 filestructure.txt         # This file - project structure overview
│
├── 📁 app/                       # Main application package
│   ├── 📄 __init__.py           # Application factory & Flask app configuration
│   ├── 📄 models.py             # SQLAlchemy database models & relationships
│   ├── 📄 extensions.py         # Flask extensions (Marshmallow, Limiter, Cache)
│   │
│   ├── 📁 blueprints/           # Modular route definitions
│   │   ├── 📁 customers/        # Customer management module
│   │   │   ├── 📄 __init__.py   # Customer blueprint registration
│   │   │   ├── 📄 routes.py     # Customer CRUD operations & authentication
│   │   │   └── 📄 schemas.py    # Customer data validation schemas
│   │   │
│   │   ├── 📁 mechanics/        # Mechanic management module
│   │   │   ├── 📄 __init__.py   # Mechanic blueprint registration
│   │   │   ├── 📄 routes.py     # Mechanic CRUD operations & reports
│   │   │   └── 📄 schemas.py    # Mechanic data validation schemas
│   │   │
│   │   ├── 📁 service_tickets/  # Service ticket operations
│   │   │   ├── 📄 __init__.py   # Service ticket blueprint registration
│   │   │   ├── 📄 routes.py     # Ticket CRUD & labor log management
│   │   │   └── 📄 schemas.py    # Service ticket validation schemas
│   │   │
│   │   ├── 📁 inventory/        # Parts inventory management
│   │   │   ├── 📄 __init__.py   # Inventory blueprint registration
│   │   │   ├── 📄 routes.py     # Parts CRUD & stock management
│   │   │   └── 📄 schemas.py    # Inventory validation schemas
│   │   │
│   │   └── 📁 fakedata/         # Test data generation
│   │       ├── 📄 __init__.py   # Fake data blueprint registration
│   │       └── 📄 routes.py     # Development & testing data endpoints
│   │
│   ├── 📁 utils/                # Utility functions & helpers
│   │   ├── 📄 roles.py          # JWT authentication & role-based authorization
│   │   └── 📄 util.py           # Token encoding/decoding utilities
│   │
│   └── 📁 static/               # Static files & documentation
│       └── 📄 swagger.yaml      # OpenAPI/Swagger API documentation
│
├── 📁 tests/                    # Comprehensive test suite (43 tests)
│   ├── 📄 test_customer.py      # Customer endpoint testing
│   ├── 📄 test_mechanic.py      # Mechanic endpoint testing
│   ├── 📄 test_tickets.py       # Service ticket testing
│   └── 📄 test_inventory.py     # Inventory management testing
│
├── 📁 instance/                 # Instance-specific files
│   ├── 📄 test.db              # SQLite database for development
│   └── 📄 testing.db           # Separate database for testing
│
└── 📁 __pycache__/             # Python bytecode cache (auto-generated)
    └── ...                     # Compiled Python files

🚀 Key Features:
• JWT Authentication with role-based access control
• Modular Blueprint architecture for scalability  
• Comprehensive test coverage (43/43 tests passing)
• Production-ready with rate limiting & caching
• Interactive Swagger API documentation
• Multi-environment configuration support

🔗 Live Demo: https://mechanic-management-system.onrender.com/api/docs
📚 Documentation: https://mechanic-management-system.onrender.com/api/docs

Built with ❤️ by Jacob Dyson
